@inject SweetAlertService swAl

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>
<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>Name:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Genre.Name" />
            <ValidationMessage For="@(() => Genre.Name)" />
        </div>
    </div>

    <button class="btn btn-success" type="submit">Save changes</button>
</EditForm>

@code {
    private EditContext editContext = null!;

    protected override void OnInitialized() {
        editContext = new(Genre);
    }
    [Parameter]
    [EditorRequired]
    public Genre Genre { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public EventCallback OnValidSubmit { get; set; }

    public bool formPostedCorrectly { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context) {
        var formWasEdited = editContext.IsModified();

        if(!formWasEdited)
            return;

        if(formPostedCorrectly)
            return;

        var result = await swAl.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmation",
                Text = "Do you want to abandon the page and lose the changes?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true
            });

        var confirmed = !string.IsNullOrEmpty(result.Value);
        if(confirmed)
            return;

        context.PreventNavigation();
    }
}
