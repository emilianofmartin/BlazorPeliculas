@page "/movie/edit/{MovieID:int}"
@using Microsoft.AspNetCore.Authorization;
@inject NavigationManager navManager
@inject MoviesRepository repository
@inject SweetAlertService swAl
@attribute [Authorize(Roles = "admin")]
<h3>Edit Movie</h3>

@if(Movie is not null) {
<MoviesForm Movie="Movie" OnValidSubmit="Edit"
            UnselectedGenres="Unselected"
            SelectedGenres="Selected"
            SelectedActors="SelectedActors"/>
}
else {
    <LoadingWheel />
}

@code {
    [Parameter] public int MovieID { get; set; }
    private Movie? Movie;
    private List<Genre> Unselected = new List<Genre>();
    private List<Genre> Selected = new List<Genre>();
    private List<Actor> SelectedActors = new List<Actor>();

    protected override async Task OnInitializedAsync() {
        var model = await repository.PutGet(MovieID);

        Movie = model.Movie;
        Unselected = model.UnselectedGenres;
        Selected = model.SelectedGenres;
        SelectedActors = model.Actors;
    }

    private async Task Edit() {
        await repository.Put(Movie);
        navManager.NavigateTo($"/movie/{MovieID}");
    }
}
